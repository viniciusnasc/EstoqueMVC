// <auto-generated />
using System;
using Estoque.MVC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Estoque.MVC.Migrations
{
    [DbContext(typeof(EstoqueMVCContext))]
    [Migration("20211023184632_t1")]
    partial class t1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Estoque.MVC.Models.EPI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CA")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<int>("Validade")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("EPI");
                });

            modelBuilder.Entity("Estoque.MVC.Models.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Funcao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Funcionario");
                });

            modelBuilder.Entity("Estoque.MVC.Models.Retirada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataRetirada")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EpiId")
                        .HasColumnType("int");

                    b.Property<int?>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<int>("IdEpi")
                        .HasColumnType("int");

                    b.Property<int>("IdFuncionario")
                        .HasColumnType("int");

                    b.Property<DateTime>("Validade")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EpiId");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("Retirada");
                });

            modelBuilder.Entity("Estoque.MVC.Models.Retirada", b =>
                {
                    b.HasOne("Estoque.MVC.Models.EPI", "Epi")
                        .WithMany("FuncionarioEPIs")
                        .HasForeignKey("EpiId");

                    b.HasOne("Estoque.MVC.Models.Funcionario", "Funcionario")
                        .WithMany("ListaDeEPIs")
                        .HasForeignKey("FuncionarioId");

                    b.Navigation("Epi");

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("Estoque.MVC.Models.EPI", b =>
                {
                    b.Navigation("FuncionarioEPIs");
                });

            modelBuilder.Entity("Estoque.MVC.Models.Funcionario", b =>
                {
                    b.Navigation("ListaDeEPIs");
                });
#pragma warning restore 612, 618
        }
    }
}
